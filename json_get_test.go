package h

import (
	"testing"
)

func BenchmarkJsonGet_Get(b *testing.B) {
	jg, err := NewJsonGet(`{
        "a":[
            {"x":1,"y":2,"z":3},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6},
            {"x":2,"y":4,"z":6}
        ]
    }`)
	Poe(err)
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		v, err := jg.Get("a[20].x")
		//v, err := jg.Get("a")
		Poe(err)
		_ = v
	}
}
